spring.application.name=back-end

# OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_INFO_URI}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_NAME_ATTRIBUTE}

# GitHub OAuth2
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=${GITHUB_SCOPE}
spring.security.oauth2.client.registration.github.redirect-uri=${GITHUB_REDIRECT_URI}
spring.security.oauth2.client.provider.github.authorization-uri=${GITHUB_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.github.token-uri=${GITHUB_TOKEN_URI}
spring.security.oauth2.client.provider.github.user-info-uri=${GITHUB_USER_INFO_URI}
spring.security.oauth2.client.provider.github.user-name-attribute=${GITHUB_USER_NAME_ATTRIBUTE}

# LinkedIn OAuth2
spring.security.oauth2.client.registration.linkedin.client-id=${LINKEDIN_CLIENT_ID}
spring.security.oauth2.client.registration.linkedin.client-secret=${LINKEDIN_CLIENT_SECRET}
spring.security.oauth2.client.registration.linkedin.redirect-uri=${LINKEDIN_REDIRECT_URI}
spring.security.oauth2.client.registration.linkedin.scope=${LINKEDIN_SCOPE}
spring.security.oauth2.client.registration.linkedin.authorization-grant-type=${LINKEDIN_GRANT_TYPE}
spring.security.oauth2.client.registration.linkedin.client-name=${LINKEDIN_CLIENT_NAME}
spring.security.oauth2.client.provider.linkedin.authorization-uri=${LINKEDIN_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.linkedin.token-uri=${LINKEDIN_TOKEN_URI}
spring.security.oauth2.client.provider.linkedin.user-info-uri=${LINKEDIN_USERINFO_URI}
spring.security.oauth2.client.provider.linkedin.user-name-attribute=${LINKEDIN_NAME_ATTRIBUTE}

# Facebook OAuth2
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.redirect-uri=${FACEBOOK_REDIRECT_URI}
spring.security.oauth2.client.registration.facebook.scope=${FACEBOOK_SCOPE}
spring.security.oauth2.client.provider.facebook.authorization-uri=${FACEBOOK_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.facebook.token-uri=${FACEBOOK_TOKEN_URI}
spring.security.oauth2.client.provider.facebook.user-info-uri=${FACEBOOK_USERINFO_URI}
spring.security.oauth2.client.provider.facebook.user-name-attribute=${FACEBOOK_NAME_ATTRIBUTE}

# DBA MariaDB
spring.datasource.url=${MARIA_DB_URL}
spring.datasource.username=${MARIA_DB_USERNAME}
spring.datasource.password=${MARIA_DB_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# Certificado
server.port=${SERVER_PORT}
server.ssl.key-store=${SSL_KEY_STORE}
server.ssl.key-store-password=${SSL_KEY_PASSWORD_STORE}
server.ssl.key-store-type=${SSL_KEY_STORE_TYPE}
server.ssl.key-alias=${SSL_KEY_ALIAS}

# RabbitMQ
rabbit.exchange=${RABBITMQ_XCHANGE}
rabbit.routing.key=${RABBITMQ_ROUTING_KEY}
rabbit.user=${RABBITMQ_USER}
rabbit.password=${RABBITMQ_PASSWORD}

# JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

